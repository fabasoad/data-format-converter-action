---
name: "Data Format Converter Action"
author: Yevhen Fabizhevskyi
description: "GitHub action that converts YAML / JSON / XML / PROPS data formats interchangeably"
branding:
  icon: copy
  color: green
inputs:
  input:
    description: "Path to the file with the data to be converted."
    required: true
  from:
    description: "Format of a file. Possible values: json, xml, yaml, props."
    required: true
  to:
    description: "Format of a file as a result. Possible values: json, xml, yaml, props."
    required: true
  token:
    description: "The GitHub token or personal access token"
    required: false
    default: ${{ github.token }}
outputs:
  output:
    description: "Converted data."
    value: ${{ steps.result.outputs.data }}
runs:
  using: "composite"
  steps:
    - name: Validate inputs
      env:
        INPUT_INPUT: "${{ inputs.input }}"
        INPUT_FROM: "${{ inputs.from }}"
        INPUT_TO: "${{ inputs.to }}"
        INPUT_TOKEN: "${{ inputs.token }}"
      run: |
        ./validate-inputs.sh \
          "${INPUT_INPUT}" \
          "${INPUT_FROM}" \
          "${INPUT_TO}" \
          "${INPUT_TOKEN}"
      shell: sh
      working-directory: ${{ github.action_path }}/src

    - name: Collect info
      id: info
      run: ./collect-info.sh
      shell: sh
      working-directory: ${{ github.action_path }}/src

    - name: Detect yq binary based on OS
      if: ${{ inputs.from != inputs.to && steps.info.outputs.yq-installed == 'false' }}
      id: binary
      run: ./detect-yq-binary.sh
      shell: sh
      working-directory: ${{ github.action_path }}/src

    - name: Check same from and to
      if: ${{ inputs.from == inputs.to }}
      env:
        INPUT_INPUT: "${{ inputs.input }}"
      run: cp "${INPUT_INPUT}" "${{ steps.info.outputs.yq-temp-file-path }}"
      shell: sh

    - name: Download mikefarah/yq
      if: ${{ inputs.from != inputs.to && steps.info.outputs.yq-installed == 'false' }}
      id: download-binary
      uses: robinraju/release-downloader@v1
      with:
        repository: "mikefarah/yq"
        latest: "true"
        fileName: "${{ steps.binary.outputs.name }}"
        out-file-path: "${{ steps.info.outputs.bin-dir }}"
        token: "${{ inputs.token }}"

    - name: Install mikefarah/yq
      if: ${{ inputs.from != inputs.to && steps.info.outputs.yq-installed == 'false' }}
      run: |
        ./install-yq.sh \
          "${{ steps.binary.outputs.name }}" \
          "${{ steps.info.outputs.bin-path }}" \
          "${{ steps.download-binary.outputs.tag_name }}"
      shell: sh
      working-directory: ${{ github.action_path }}/src

    - name: Convert
      if: ${{ inputs.from != inputs.to }}
      env:
        INPUTS_INPUT: "${{ inputs.input }}"
        INPUTS_FROM: "${{ inputs.from }}"
        INPUTS_TO: "${{ inputs.to }}"
      run: |
        yq \
          -P "${INPUTS_INPUT}" \
          -p "${INPUTS_FROM}" \
          -o "${INPUTS_TO}" \
          > "${{ steps.info.outputs.yq-temp-file-path }}"
      shell: sh

    - name: Save output
      id: result
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          core.setOutput('data', fs.readFileSync('${{ steps.info.outputs.yq-temp-file-path }}', 'utf-8').replace(/\s+$/gm, ''));
          fs.unlinkSync('${{ steps.info.outputs.yq-temp-file-path }}');
